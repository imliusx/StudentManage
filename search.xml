<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Markdown 语言学习]]></title>
    <url>%2F2019%2F07%2F13%2FMarkdown%20%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[Markdown 语言学习 MarkdownMarkdown 语言是一种轻量级标记语言, 它允许人们使用易读易写的纯文本格式编写文档.Markdown 语言在2004年由约翰·格鲁伯（John Gruber）创建.Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档.Markdown 编写后的文档后缀为 .md, .markdown. Markdown支持的语言Markdown 可以支持下列语言:1c, abnf, accesslog, actionscript, ada, apache, applescript, arduino, armasm, asciidoc, aspectj, autohotkey, autoit, avrasm, awk, axapta, bash, basic, bnf, brainfuck, cal, capnproto, ceylon, clean, clojure, clojure-repl, cmake, coffeescript, coq, cos, cpp, crmsh, crystal, cs, csp, css, d, dart, delphi, diff, django, dns, dockerfile, dos, dsconfig, dts, dust, ebnf, elixir, elm, erb, erlang, erlang-repl, excel, fix, flix, fortran, fsharp, gams, gauss, gcode, gherkin, glsl, go, golo, gradle, groovy, haml, handlebars, haskell, haxe, hsp, htmlbars, http, hy, inform7, ini, irpf90, java, javascript, json, julia, kotlin, lasso, ldif, leaf, less, lisp, livecodeserver, livescript, llvm, lsl, lua, makefile, markdown, mathematica, matlab, maxima, mel, mercury, mipsasm, mizar, mojolicious, monkey, moonscript, n1ql, nginx, nimrod, nix, nsis, objectivec, ocaml, openscad, oxygene, parser3, perl, pf, php, pony, powershell, processing, profile, prolog, protobuf, puppet, purebasic, python, q, qml, r, rib, roboconf, rsl, ruby, ruleslanguage, rust, scala, scheme, scilab, scss, smali, smalltalk, sml, sqf, sql, stan, stata, step21, stylus, subunit, swift, taggerscript, tap, tcl, tex, thrift, tp, twig, typescript, vala, vbnet, vbscript, vbscript-html, verilog, vhdl, vim, x86asm, xl, xml, xquery, yaml, zephir Markdown 应用Markdown 能被用来撰写电子书, 如: Gitbook.当前许多网站都广泛使用Markdown来撰写帮助文档或者是论坛上发表消息. 例如: Github, 简书, reddit, Diaspora, Stack Exchange, OpenStreeMap, SourceForge等. 编辑器该学习笔记使用Typora编辑器来学习Markdown的语法, Typora支持 MacOS, Windows, Linux,平台, 包含多种主题, 编辑后直接渲染出效果.支持导出HTML, PDF, Word, 图片等多种类型的文件.Typora 官网: https://typora.io/ Markdown标题Markdown标题有两种格式 使用=和-标记一和二级标题 1234我展现的是一级标题===============我展现的是二级标题--------------- 使用#号标记使用#号可以标记1-6级标题, 一级标题对应一个#号, 二级标题对应两个#号, 以此类推 123456#一级标题##二级标题###三级标题####四级标题#####五级标题######六级标题 Markdown段落格式 Markdown 段落没有特殊的格式, 直接编写文字就好, 段落的换行是使用两个以上的空格加回车 当然也可以在段落后面使用一个空行来表示重新开始一个段落字体Markdown 可以使用以下几种字体123456*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___ 效果图如下:斜体文本斜体文本粗体文本粗体文本粗斜体文本粗斜体文本 分隔线可以在一行中使用三个以上的*号, -号, 来建立一个分隔线, 行内不能有其他东西, 也可以在*号或者是-中间插入空格. 下面每种写法都可以建立分隔线12345**** * ******- - --------- 效果图如下: 删除线如果段落上的文字要添加删除线, 只需要在文字的两端 加上两个波浪线~~即可12Markdown 语法学习~~Markdown 语法学习~~ 效果图如下:Markdown 语法学习Markdown 语法学习 下划线下划线可以通过HTML的&lt;u&gt;标签来实现:1&lt;u&gt;Markdown 语法学习&lt;/u&gt; 效果图如下:Markdown 语法学习 脚注脚注是对文本的补充说明, Markdown 脚注的用法如下:12[^要注明的文本][^Markdown]: 编程使我快乐! 效果图如下:这是一个脚注 [^ Markdown][^ Markdown]: 编程使我快乐! Markdown列表Markdown 支持有序列表和无序列表 无序列表无序列表使用星号*和加号+或是-作为列表标记, 注意: 每一个*,-,+后面应该有一个空格1234567891011* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项 显示结果如下: 第一项 第二项 第三项 第一项 第二项 第三项 第一项 第二项 第三项 有序列表有序列表使用数字并加上.号来表示,1231. 第一项2. 第二项3. 第三项 显示结果如下: 第一项 第二项 第三项 列表嵌套列表嵌套只需要在子列表中的选项添加4个空格即可:1234561. 第一项: - 第一项嵌套的第一个元素 - 第一项嵌套的第二个元素2. 第二项: - 第二项嵌套的第一个元素 - 第二项嵌套的第二个元素 显示结果如下: 第一项: 第一项嵌套的第一个元素 第一项嵌套的第二个元素 第二项: 第二项嵌套的第一个元素 第二项嵌套的第二个元素 Markdown区块引用Markdown 区块引用是在段落开头使用&gt;符号, 后面紧跟一个空格符号123&gt; 区块引用&gt; Markdown 语法学习 &gt; Talk is cheap. Show me the code. 显示结果如下 区块引用Markdown 语法学习Talk is cheap. Show me the code. 另外区块是可以嵌套的, 一个&gt;符号是最外层, 两个&gt;符号是第一层嵌套, 以此类推:123&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套 显示结果如下: 最外层 第一层嵌套 第二层嵌套 区块中使用列表区块中使用列表的实例如下:123456&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; - 第二项&gt; * 第三项 显示结果如下: 区块中使用列表 第一项 第二项 第一项 第二项 第三项 列表中使用区块如果想要在列表中放入区块引用, 那么就在&gt;前面添加4个空格的缩进列表中使用区块的实例如下:1234* 列表第一项 &gt; 区块第一项 &gt; 区块第二项* 列表第二项 显示结果如下: 列表第一项 区块第一项区块第二项 列表第二项 Markdown代码如果是段落上的一个函数或者片段的代码可以使用1个反引号`把它包起来,例如: 1`printf()`函数 显示结果如下:printf()函数 代码区块代码区块可以使用4个空格或者1个制表符(Tab键) 实例如下:12345public class Demo &#123; public static void main(String[] args) &#123; System.out.println(&quot;Hello&quot;); &#125;&#125; 也可以使用3个反引号```包裹一段代码, 并指定一种语言 (也可以不指定) 1234567​```java public class Demo &#123; public static void main(String[] args) &#123; System.out,println(&quot;Hello&quot;); &#125; &#125;​ 123456789**显示结果如下:**```javapublic class Demo &#123; public static void main(String[] args) &#123; System.out,println(&quot;Hello&quot;); &#125;&#125; Markdown链接链接使用的方法如下: 123[链接名称](链接地址)或者&lt;链接地址&gt; 链接使用实例: 1[这是一个链接](https://www.baidu.com) 显示结果如下: 这是一个链接 直接使用链接地址: 1&lt;https://www.baidu.com&gt; 显示结果如下: https://www.baidu.com 高级链接123456这个链接使用a来作为网址的变量 [百度][a]这个链接使用web来作为网址的变量[百度][web]然后在文档的结尾为变量赋值(网址)[a]: https://www.baidu.com/[web]: https://www.baidu.com/ 显示结果如下: 这个链接使用a来作为网址的变量 [百度][a]这个链接使用web来作为网址的变量[百度][web] 然后在文档的结尾为变量赋值(网址)[a]: https://www.baidu.com/[web]: https://www.baidu.com/ Markdown图片Markdown图片语法格式如下: 12![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;) 开头一个感叹号! , 比链接多了一个感叹号 接着一个方括号, 里面放上图片的代替文字 接着一个普通的符号, 里面放上图片的网址, 最后还可以用引号&quot;包住并加上选择性的’’title”属性文字 使用实例: 1![这是一张图片](https://s2.ax1x.com/2019/07/13/ZhMDGd.png) 显示结果如下: 当然, 也可以像网址那样对图片网址使用变量 1234这个链接用b作为网址的变量[photo][b]然后在文档的结尾处进行变量赋值(网址)[b]: https://s2.ax1x.com/2019/07/13/ZhMDGd.png 显示结果如下 这个链接用b作为网址的变量photo Markdown表格Markdown 制作表格使用|来分隔不同的单元格, 使用-来分隔表头和其他行 语法格式如下: 1234| 表头 | 表头 || ----- | ----- || 单元格 | 单元格 || 单元格 | 单元格 | 显示结果如下: 表头 表头 单元格 单元格 单元格 单元格 对齐方式 -:设置内容和标题栏居右对齐 :-设置内容和标题栏居左对齐 :-:设置内容和标题栏居中对齐 实例如下: 1234|左对齐|右对齐|居中对齐||:----|----:|:------:||单元格|单元格|单元格||单元格|单元格|单元格| 显示结果如下: 左对齐 右对齐 居中对齐 单元格 单元格 单元格 单元格 单元格 单元格 Markdown高级技巧支持的HTML元素目前支持的HTML元素有: &lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等, 如: 1使用&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑 转义Markdown使用了很多特殊符号来表示特定的意义, 如果需要显示特定的符号则需要使用转义字符, Markdown使用反斜杠\转义特殊字符 12文本加粗**显示正常星号** 输出结果为 文本加粗**显示正常星号** Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号： 123456789101112\ 反斜线` 反引号* 星号_ 下划线&#123;&#125; 花括号[] 方括号() 小括号# 井字号+ 加号- 减号. 英文句点! 感叹号]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生活]]></title>
    <url>%2F2019%2F06%2F03%2F%E7%94%9F%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[测试链接和图片https://www.baidu.com 百度 测试分类功能测试 测试测试代码显示功能 123public static void main(String[] args) &#123; System.out.println("hello");&#125; 引用测试 书山有路勤为径 , 学海无涯苦作舟 有序列表测试 第一个 第二个 第三个]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>个人生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java学习笔记-入门]]></title>
    <url>%2F2019%2F05%2F15%2FJava%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[Java语言发展史SUN(Stanford University Network，斯坦福大学网络公司) 1990年末，Sun公司启动由James Gosling领导的“Green计划”，旨在开发智能家电的嵌入式控制系统 1991年2月，Green项目小组成员发现C++存在很多弊端，决定在其基础上开发一种新的语言，并命名为“Oak” 1991年6月，JamesGosling开发了Oak的解释器 1992年，Green完成了Green操作系统、Oak语言、类库等开发 1992年11月，Green计划转化成“FirstPerson”，一个Sun公司的全资子公司 1993年，时代华纳发布电视机顶盒提议书，有线电视业界觉得FirstPerson的平台给予用户过多的控制权，因此FirstPerson的投标败给了SGI。同年，FirstPerson公司一笔与3DO公司的机顶盒交易也宣告失败，Green计划几乎夭折 1994年，FirstPerson公司倒闭，员工都合并到Sun公司。Gosling修改OaK并很快发布第一个Java语言的网页浏览器：WebRunner(后来改名为HotJava)，Oak更名为Java 1995年5月23日，Sun公司正式在互联网上免费发布Java语言，标志着JAVA语言的正式诞生。几个月后，超过10万人下载Java语言 1996年，JDK1.0发布，这是java发展历程中的重要里程碑，标志着java成为一种独立的开发工具 1997年2月，JDK1.1发布 1998年12月，第二代Java平台的企业版J2EE发布 1999年4月27日，HotSpot虚拟机发布 1999年6月，Java2被分成三个版本：J2SE（标准版）、J2EE(企业版)、J2ME(微型版),是Java发展过程中最重要的一个里程碑，标志着Java的应用开始普及 2000年5月,JDK1.3,JDK1.4和J2SE1.3相继发布 2001年9月24日，J2EE1.3发布 2002年2月，J2SE1.4发布,各种开源框架大量出现 2004年9月30日18:00PM，J2SE1.5发布，成为java语言发展史上的又一里程碑。为了表示该版本的重要性，J2SE1.5更名为Java SE 5.0 2005年6月，Java SE 6.0发布，三个版本分别改为：JavaSE， JavaEE， JavaME 2006年11月13日，Java技术的发明者Sun公司宣布，将Java技术作为免费软件对外发布 2009年4月20日，Oracle以74亿美元收购Sun公司，取得了java的版权 2011年7月，JavaSE7发布 2014年3月，JavaSE8发布 Java语言版本 JDK 1.1.4 Sparkler 宝石 1997-09-12 JDK 1.1.5 Pumpkin 南瓜 1997-12-13 JDK 1.1.6 Abigail 阿比盖尔–女子名 1998-04-24 JDK 1.1.7 Brutus 布鲁图–古罗马政治家和将军 1998-09-28 JDK 1.1.8 Chelsea 切尔西–城市名 1999-04-08 J2SE 1.2 Playground 运动场 1998-12-04 J2SE 1.2.1 none 无 1999-03-30 J2SE 1.2.2 Cricket 蟋蟀 1999-07-08 J2SE 1.3 Kestrel 美洲红隼 2000-05-08 J2SE 1.3.1 Ladybird 瓢虫 2001-05-17 J2SE 1.4.0 Merlin 灰背隼 2002-02-13 J2SE 1.4.1 grasshopper 蚱蜢 2002-09-16 J2SE 1.4.2 Mantis 螳螂 2003-06-26 JAVASE 5.0 (1.5.0) Tiger 老虎 JAVASE 5.1 (1.5.1) Dragonfly 蜻蜓 JAVASE 6.0 (1.6.0) Mustang 野马 JAVASE 7.0 (1.7.0) Dolphin 海豚 Java语言平台 J2SE(Java 2 Platform Standard Edition)标准版 是为开发普通桌面和商务应用程序提供的解决方案,该技术体系是其他两者的基础，可以完成一些桌面应用程序的开发 J2ME(Java 2 Platform Micro Edition)小型版 是为开发电子消费产品和嵌入式设备提供的解决方案 J2EE(Java 2 Platform Enterprise Edition)企业版 是为开发企业环境下的应用程序提供的一套解决方案,该技术体系中包含的技术如 Servlet、Jsp等，主要针对于Web应用程序开发 Java语言的特点 简单性 面向对象 分布式处理 多线程 动态 安全性 开源 跨平台 Java语言跨平台原理只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine)即可。由JVM来负责Java程序在该系统中的运行. write once ,run anywhere!(一处编译,到处运行) JDK和JRE JRE 包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。 JRE:JVM+类库。 JDK JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。 其中的开发工具：编译工具(javac.exe) 打包工具(jar.exe)等 JDK : JRE + JAVA开发工具。]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
</search>
